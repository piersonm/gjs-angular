#!/usr/bin/env node
(()=>{"use strict";var e={n:t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=require("yargs");var n=e.n(t);const o=require("fs");var s=e.n(o);const i=require("path");var r=e.n(i);const a=require("inquirer");var l=e.n(a);const c=require("chalk");var p=e.n(c);const d=e=>void 0===e,u=(e,{color:t="green",lineDown:n=1}={})=>{console.log(""),console.log(p()[t].bold(e)),n&&console.log("")},y=e=>{u(e,{color:"red"})},m=(...e)=>console.log.apply(void 0,e),b=e=>{const t=r().dirname(e);return!!s().existsSync(t)||(s().mkdirSync(t),b(t))},g=(e,t)=>{let n=e[t]||{};if("string"==typeof n)try{n=JSON.parse(n)}catch(e){y(`Error while parsing "${t}" option`),y(e),n={}}return n},f=e=>({...e,babel:g(e,"babel"),htmlWebpack:g(e,"htmlWebpack")}),h=(e,t)=>{const n=s().existsSync(e);n&&s().statSync(e).isDirectory()?(s().mkdirSync(t),s().readdirSync(e).forEach((n=>{h(r().join(e,n),r().join(t,n))}))):n&&s().copyFileSync(e,t)},v=e=>r().resolve(process.cwd(),e),w=()=>require,S=e=>w().resolve(e),k=(e={})=>({presets:[[S("@babel/preset-env"),{targets:e.targets}]],plugins:[S("@babel/plugin-transform-runtime")]}),j=require("listr");var x=e.n(j);const F=require("spdx-license-list/full");var $=e.n(F);const _=require("lodash.template");var q=e.n(_);const O="4.1.1",E="./template",P=process.cwd(),C=e=>{const t=r().resolve(__dirname,`${E}/${e}`);return s().readFileSync(t,"utf8")},N=e=>r().resolve(P,e),B=e=>r().resolve(__dirname,`${E}/${e}`),D=e=>!(!e||"false"===e),I=require("dts-bundle-generator"),A=require("webpack");var R=e.n(A);const T=require("html-webpack-plugin");var W=e.n(T);const J=require("terser-webpack-plugin");var L=e.n(J);const M=process.cwd();let G=[];const H=(e={})=>{const t=r().join(M,"package.json"),n=s().readFileSync(t),o=JSON.parse(n),{args:i,cmdOpts:a={}}=e,{htmlWebpack:l={}}=i,c=o.name,d=e.production,u=`/*! ${c} - ${o.version} */`;if(!d){const e="index.html",t=`${M}/${e}`,n=`${M}/_${e}`;let o=r().resolve(__dirname,`./../${e}`);s().existsSync(n)?o=n:s().existsSync(t)&&(o=t),G.push(new(W())({inject:"head",template:o,...l,templateParameters:{name:c,title:c,gjsVersion:"latest",pathGjs:"",pathGjsCss:"",...l.templateParameters||{}}}))}const y=r().resolve(M,i.output),b=["node_modules",r().join(__dirname,"../node_modules")];let g={entry:r().resolve(M,i.entry),mode:d?"production":"development",devtool:d?"source-map":"eval",optimization:{minimizer:[new(L())({extractComments:!1,terserOptions:{compress:{evaluate:!1},output:{comments:!1,quote_style:3,preamble:u}}})]},output:{path:y,filename:"index.js",library:c,libraryTarget:"umd",globalObject:"typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this)"},module:{rules:[{test:/\.tsx?$/,loader:S("ts-loader"),exclude:/node_modules/,options:{context:v(""),configFile:v("tsconfig.json")}},{test:/\.js$/,loader:S("babel-loader"),include:/src/,options:{...k(i),cacheDirectory:!0,...i.babel}}]},resolve:{extensions:[".tsx",".ts",".js"],modules:b},plugins:G};const f=v("webpack.config.js");let h;if(s().existsSync(f)){const e=w()(f);h=e.default||e}if("function"==typeof h){const e=h({config:g});g=null===(j=e)||Array.isArray(j)||"object"!=typeof j?g:e}var j;return a.verbose&&m(p().yellow("Webpack config:\n"),g,"\n"),g},U=require("child_process"),z=require("rimraf");var Y=e.n(z);const V=require("@babel/core"),K=require("webpack-dev-server");var Q=e.n(K);n().usage(p().green.bold(s().readFileSync(r().resolve(__dirname,"./banner.txt"),"utf8")+`\nv${O}`));const X=e=>{e.positional("config",{describe:"webpack configuration options",type:"string",default:"{}"}).positional("babel",{describe:"Babel configuration object",type:"string",default:"{}"}).positional("targets",{describe:"Browser targets in browserslist query",type:"string",default:"> 0.25%, not dead"}).positional("entry",{describe:"Library entry point",type:"string",default:"src/index"}).positional("output",{describe:"Build destination directory",type:"string",default:"dist"})},Z=e=>e.command(["serve [port]","server"],"Start the server",(e=>{e.positional("devServer",{describe:"webpack-dev-server options",type:"string",default:"{}"}).positional("host",{alias:"h",describe:"Host to bind on",type:"string",default:"localhost"}).positional("port",{alias:"p",describe:"Port to bind on",type:"number",default:8080}).positional("htmlWebpack",{describe:"html-webpack-plugin options",type:"string",default:"{}"}),X(e)}),(e=>((e={})=>{u("Start the development server...");const{host:t,port:n}=e,o=e.verbose,s={...H({args:f(e),cmdOpts:e}),...g(e,"webpack")},i={...s.devServer,open:!0,...g(e,"devServer")};"localhost"!==t&&(i.host=t),8080!==n&&(i.port=n),o&&(m(p().yellow("Server config:\n"),e,"\n"),m(p().yellow("DevServer config:\n"),i,"\n"));const r=R()(s);new(Q())(i,r).start()})(e))).command("build","Build the source",(e=>{e.positional("stats",{describe:"Options for webpack Stats instance",type:"string",default:"{}"}).positional("statsOutput",{describe:'Specify the path where to output webpack stats file (eg. "stats.json")',type:"string",default:""}).positional("patch",{describe:"Increase automatically the patch version",type:"boolean",default:!0}).positional("localePath",{describe:"Path to the directory containing locale files",type:"string",default:"src/locale"}),X(e)}),(e=>((e={})=>{u("Start building the library...");const t=e.verbose;t&&m(p().yellow("Build config:\n"),e,"\n");const n=()=>{const n={...H({production:1,args:f(e),cmdOpts:e}),...g(e,"config")};R()(n,(async(n,o)=>{const i=n||!!o&&o.hasErrors(),r={hash:!1,colors:!0,builtAt:!1,entrypoints:!1,modules:!1,...g(e,"stats")};if(o){e.statsOutput&&s().writeFileSync(v(e.statsOutput),JSON.stringify(o.toJson())),t&&m(p().yellow("Stats config:\n"),r,"\n");const n=o.toString(r);m(n,"\n")}await(async(e={})=>{const{localePath:t}=e;if(!s().existsSync(v(t)))return;u("Start building locale files...",{lineDown:0}),await Y()("locale");const n=v("locale");h(v(t),n);let o="";s().readdirSync(n).forEach((e=>{const t=e.split(".")[0];o+=`export { default as ${t} } from './${t}'\n`})),s().writeFileSync(`${n}/index.js`,o);const i={...k(f(e))};s().readdirSync(n).forEach((e=>{const t=`${n}/${e}`,o=(0,V.transformFileSync)(t,i).code;s().writeFileSync(t,o)})),u("Locale files building completed successfully!")})(e),await(async(e={})=>{const t=v("src/index.ts");if(!s().existsSync(t))return;u("Start building TS declaration file...",{lineDown:0});const n={filePath:t,output:{noBanner:!0}},o={preferredConfigPath:v("tsconfig.json")},i=(0,I.generateDtsBundle)([n],o)[0];s().writeFileSync(v("dist/index.d.ts"),i),u("TS declaration file building completed successfully!")})(e),i?(y("Error during building"),console.error(n)):u("Building completed successfully!")}))};e.patch?(t&&m(p().yellow("Patch the version"),"\n"),(0,U.exec)("npm version --no-git-tag-version patch",n)):n()})(e))).command("init","Init GrapesJS plugin project",(e=>{e.positional("yes",{alias:"y",describe:"All default answers",type:"boolean",default:!1}).positional("name",{describe:"Name of the project",type:"string"}).positional("rName",{describe:"Repository name",type:"string"}).positional("user",{describe:"Repository username",type:"string"}).positional("components",{describe:"Indicate to include custom component types API",type:"boolean"}).positional("blocks",{describe:"Indicate to include blocks API",type:"boolean"}).positional("i18n",{describe:"Indicate to include the support for i18n",type:"boolean"}).positional("license",{describe:"License of the project",type:"string"})}),(e=>(async(e={})=>{const t=r().basename(process.cwd()),n=[],{verbose:o,name:i,rName:a,user:c,yes:p,components:y,blocks:g,i18n:f,license:h}=e;let v={name:i||(w=t,w.replace(/\_/g,"-").split("-").filter((e=>e)).map((e=>e[0].toUpperCase()+e.slice(1))).join(" ")),rName:a||t,user:c||"YOUR-USERNAME",components:!!d(y)||y,blocks:!!d(g)||g,i18n:!!d(f)||f,license:h||"MIT"};var w;u(`Init the project${o?" (verbose)":""}...`),p||(!i&&n.push({name:"name",message:"Name of the project",default:v.name}),!a&&n.push({name:"rName",message:"Repository name (used also as the plugin name)",default:v.rName}),!c&&n.push({name:"user",message:"Repository username (eg. on GitHub/Bitbucket)",default:v.user}),d(y)&&n.push({type:"boolean",name:"components",message:"Will you need to add custom Component Types?",default:v.components}),d(g)&&n.push({type:"boolean",name:"blocks",message:"Will you need to add Blocks?",default:v.blocks}),d(f)&&n.push({type:"boolean",name:"i18n",message:"Do you want to setup i18n structure in this plugin?",default:v.i18n}),!h&&n.push({name:"license",message:"License of the project",default:v.license}));const S=await l().prompt(n);v={...v,...S},o&&m({results:v,opts:e}),await(async(e={})=>{u("Start project creation..."),e.components=D(e.components),e.blocks=D(e.blocks),e.i18n=D(e.i18n);const t=new(x())([{title:"Creating initial source files",task:()=>(async(e={})=>{const t=C("README.md"),n=N("README.md"),o=C("src/index.js"),i=N("src/index.js"),r=C("_index.html"),a=N("_index.html"),l=$()[e.license],c=l&&(l.licenseText||"").replace("<year>",`${(new Date).getFullYear()}-current`).replace("<copyright holders>",e.name);b(i),s().writeFileSync(i,q()(o)(e).trim()),s().writeFileSync(a,q()(r)(e)),s().writeFileSync(n,q()(t)(e)),c&&s().writeFileSync(N("LICENSE"),c),s().copyFileSync(B(".gitignore-t"),N(".gitignore")),s().copyFileSync(B(".npmignore-t"),N(".npmignore")),s().copyFileSync(B("tsconfig.json"),N("tsconfig.json"))})(e)},{title:"Creating custom Component Type file",task:()=>((e={})=>{const t="src/components.js",n=B(t),o=N(t);e.components&&s().copyFileSync(n,o)})(e),enabled:()=>e.components},{title:"Creating Blocks file",task:()=>((e={})=>{const t="src/blocks.js",n=B(t),o=N(t);e.blocks&&s().copyFileSync(n,o)})(e),enabled:()=>e.blocks},{title:"Creating i18n structure",task:()=>((e={})=>{const t="src/locale/en.js",n=C(t),o=N(t);b(o),s().writeFileSync(o,q()(n)(e))})(e),enabled:()=>e.i18n},{title:"Update package.json",task:()=>((e={})=>{const t="package.json",n=C(t),o=N(t);s().writeFileSync(o,q()(n)({...e,version:O}))})(e)}]);await t.run()})(v),u("Project created! Happy coding")})(e))).options({verbose:{alias:"v",description:"Run with verbose logging",type:"boolean",default:!1}}).recommendCommands().strict();(async(e={})=>{try{(await(async()=>await Z(n()).parse())())._.length||n().showHelp()}catch(e){y((e.stack||e).toString())}})()})();